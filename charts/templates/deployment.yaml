apiVersion: apps/v1
kind: Deployment
metadata:
  name: '{{ .Release.Name }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      app: '{{ .Release.Name }}'
  template:
    metadata:
      annotations:
        prometheus.io/path: '/metrics'
      labels:
        app: '{{ .Release.Name }}'
    spec:
      containers:
        - name: '{{ .Chart.Name }}'
          env:
            - name: 'TENANT_DOMAIN'
              value: '{{ .Values.tenantDomain }}'
            - name: 'TENANT_NAME'
              value: '{{ .Values.fasit.tenant.name }}'
            - name: 'GITHUB_ORGANIZATION'
              value: '{{ .Values.gitHub.organization }}'
            # - name: 'OTEL_TRACES_EXPORTER'
            #   value: 'otlp'
            # - name: 'OTEL_METRICS_EXPORTER'
            #   value: 'otlp'
            # - name: 'OTEL_LOGS_EXPORTER'
            #   value: 'otlp'
            # - name: 'NODE_OPTIONS'
            #   value: '--require @opentelemetry/auto-instrumentations-node/register'
            # - name: 'OTEL_RESOURCE_ATTRIBUTES'
            #   value: 'service.instance.id=console-frontend'
            # - name: 'OTEL_NODE_RESOURCE_DETECTORS'
            #   value: 'env,host,os'
          envFrom:
            - secretRef:
                name: '{{ .Release.Name }}'
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1069
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          image: '{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Chart.Version }}'
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 32Mi
            limits:
              memory: 512Mi
          livenessProbe:
            httpGet:
              path: /isAlive
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /isReady
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 6
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
