query App(
	$app: String!
	$team: Slug!
	$env: String!
	$first: Int
	$last: Int
	$before: Cursor
	$after: Cursor
) {
	team(slug: $team) {
		environment(name: $env) {
			application(name: $app) {
				__typename
				id
				name
				team {
					slug
				}
				image {
					hasSBOM
					vulnerabilitySummary {
						critical
						high
						medium
						low
						unassigned
						riskScore
						lastUpdated
					}
				}
				teamEnvironment {
					environment {
						name
					}
				}

				deletionStartedAt
				deployments(first: 1) {
					nodes {
						triggerUrl
						statuses {
							nodes {
								state
								message
								createdAt
							}
						}
					}
				}
				instances(first: $first, after: $after, last: $last, before: $before)
					@paginate(mode: SinglePage) {
					pageInfo {
						totalCount
						hasNextPage
						hasPreviousPage
						pageEnd
						pageStart
						startCursor
						endCursor
					}
					edges {
						node {
							id
							name
							restarts
							status {
								state
								message
							}
							created
							memory: instanceUtilization(resourceType: MEMORY) {
								current
							}
							cpu: instanceUtilization(resourceType: CPU) {
								current
							}
						}
					}
				}
				resources {
					scaling {
						maxInstances
						minInstances
						strategies {
							__typename
							... on KafkaLagScalingStrategy {
								consumerGroup
								threshold
								topicName
							}
							... on CPUScalingStrategy {
								threshold
							}
						}
					}
					requests {
						cpu
						memory
					}
					limits {
						cpu
						memory
					}
				}
				status {
					errors {
						__typename
						level
						... on WorkloadStatusDeprecatedRegistry {
							registry
						}
						... on WorkloadStatusSynchronizationFailing {
							detail
						}
						... on WorkloadStatusInvalidNaisYaml {
							detail
						}
						... on WorkloadStatusVulnerable {
							summary {
								critical
								riskScore
							}
						}
						... on WorkloadStatusUnsupportedCloudSQLVersion {
							level
							version
						}
					}
				}
				utilization {
					requested_cpu: requested(resourceType: CPU)
					requested_memory: requested(resourceType: MEMORY)
					limit_cpu: limit(resourceType: CPU)
					limit_memory: limit(resourceType: MEMORY)
					recommendations {
						cpuRequestCores
						memoryLimitBytes
						memoryRequestBytes
					}
				}

				...SidebarActivityLogFragment
				...Persistence
				...WorkloadDeploy
				...NetworkPolicy
				...Manifest
				...Ingresses
			}
		}
	}
}
