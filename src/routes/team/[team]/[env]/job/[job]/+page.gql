query Job($job: String!, $team: Slug!, $env: String!) @cache(policy: NetworkOnly) {
	team(slug: $team) {
		environment(name: $env) {
			job(name: $job) {
				id
				name
				schedule {
					expression
					timeZone
				}
				...JobNetworkPolicy
				...JobStatus
				...Persistence
				...JobInstances
				...WorkloadImage
			}
		}
	}
	#job(name: $job, team: $team, env: $env) @loading(cascade: true) {
	#	name
	#	schedule
	#	image
	#	runs {
	#		name
	#		startTime
	#		completionTime
	#		failed
	#		duration
	#		message
	#	}
	#	...JobAccessPolicy
	#	...JobInstances
	#	persistence {
	#		name
	#		__typename
	#
	#		... on SqlInstance {
	#			type
	#		}
	#
	#		... on OpenSearch {
	#			openSearchInstanceAccess: access {
	#				role
	#			}
	#		}
	#		... on Redis {
	#			redisInstanceAccess: access {
	#				role
	#			}
	#		}
	#		... on KafkaTopic {
	#			env {
	#				name
	#			}
	#			team {
	#				slug
	#			}
	#			acl(filter: { application: $job, team: $team }) {
	#				pageInfo {
	#					hasNextPage
	#					hasPreviousPage
	#					totalCount
	#				}
	#				nodes {
	#					teamName
	#					applicationName
	#					access
	#				}
	#			}
	#		}
	#	}
	#	...JobAuthz
	#	...JobImage
	#	...JobStatus
	#}
	#
	team(slug: $team) {
		viewerIsOwner
		viewerIsMember
	}
}
