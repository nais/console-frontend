query TeamOverview($team: Slug!) @cache(policy: NetworkOnly) {
	team(slug: $team) {
		purpose
		activityLog(first: 1) {
			nodes {
				id
				__typename
				createdAt
				actor
				createdAt
				environmentName
				message
				resourceName
				resourceType

				... on RepositoryAddedActivityLogEntry {
					actor
					message
					resourceName
					resourceType
					teamSlug
				}

				... on RepositoryRemovedActivityLogEntry {
					actor
					message
					resourceName
					resourceType
					teamSlug
				}

				... on SecretValueAddedActivityLogEntry {
					secretValueAdded: data {
						valueName
					}
				}
				... on SecretValueRemovedActivityLogEntry {
					secretValueRemoved: data {
						valueName
					}
				}
				... on SecretValueUpdatedActivityLogEntry {
					secretValueUpdated: data {
						valueName
					}
				}
				... on TeamEnvironmentUpdatedActivityLogEntry {
					teamEnvironmentUpdated: data {
						updatedFields {
							field
							newValue
							oldValue
						}
					}
				}
				... on TeamMemberAddedActivityLogEntry {
					teamMemberAdded: data {
						role
						userEmail
					}
				}
				... on TeamMemberRemovedActivityLogEntry {
					teamMemberRemoved: data {
						userEmail
					}
				}
				... on TeamMemberSetRoleActivityLogEntry {
					teamMemberSetRole: data {
						role
						userEmail
					}
				}
				... on TeamUpdatedActivityLogEntry {
					teamUpdated: data {
						updatedFields {
							field
							newValue
							oldValue
						}
					}
				}
				... on UnleashInstanceUpdatedActivityLogEntry {
					unleashInstanceUpdated: data {
						allowedTeamSlug
						revokedTeamSlug
					}
				}
			}
		}
		workloads(first: 600) {
			nodes {
				__typename
				id
				name
				team {
					slug
				}
				teamEnvironment {
					environment {
						name
					}
				}

				status {
					errors {
						level
						... on WorkloadStatusDeprecatedRegistry {
							name
							registry
							repository
							tag
						}
						... on WorkloadStatusSynchronizationFailing {
							detail
						}
						... on WorkloadStatusInvalidNaisYaml {
							detail
						}
						... on WorkloadStatusNoRunningInstances {
							level
						}
						... on WorkloadStatusFailedRun {
							detail
							name
						}
					}
				}
			}
		}
	}
}
